<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Login</title>
  <link rel="stylesheet" href="/style.css">
</head>
<body>
  <div class="form-container">
    <h2>Login</h2>
    <form id="loginForm">
      <div class="form-group">
        <label for="email">Email</label>
        <input type="email" id="email" name="email" placeholder="Email" required autocomplete="off">
        <div id="emailError" class="error-message" style="display:none;"></div>
      </div>
      <div class="form-group">
        <label for="password">Password</label>
        <input type="password" name="password" id="password" placeholder="Password" required>
        <div id="passwordError" class="error-message" style="display:none;"></div>
      </div>
      <div class="form-group captcha-group">
        <label for="captchaInput"></label>
        <div class="captcha-row">
          <img id="captchaImg" src="/captcha" alt="CAPTCHA" class="captcha-img">
          <button type="button" id="refreshCaptcha" class="refresh-captcha-btn">â†»</button>
        </div>
        <input type="text" id="captchaInput" name="captcha" placeholder="Enter CAPTCHA" required autocomplete="off">
        <div id="captchaError" class="error-message" style="display:none;"></div>
      </div>
      <button type="submit" class="submit-btn" id="loginBtn">Login</button>
    </form>
    <div class="oauth-buttons">
      <a href="/auth/google" class="oauth-btn google-btn">
        <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/google/google-original.svg" alt="Google Logo" class="oauth-logo">
        Continue with Google
      </a>
      <a href="/auth/github" class="oauth-btn github-btn">
        <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/github/github-original.svg" alt="GitHub Logo" class="oauth-logo">
        Continue with GitHub
      </a>
    </div>
    <p style="text-align:center;">Don't have an account? <a href="/signup">Signup</a></p>
  </div>

  <!-- Popup -->
  <div id="popup" class="popup"></div>

  <script>
    const popup = document.getElementById('popup');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const emailError = document.getElementById('emailError');
    const passwordError = document.getElementById('passwordError');
    const loginBtn = document.getElementById('loginBtn');
    const captchaImg = document.getElementById('captchaImg');
    const refreshCaptcha = document.getElementById('refreshCaptcha');
    const captchaInput = document.getElementById('captchaInput');
    const captchaError = document.getElementById('captchaError');

    function showPopup(message, type = 'success') {
      popup.textContent = message;
      popup.className = `popup show ${type}`;
      setTimeout(() => {
        popup.classList.remove('show');
      }, 3000);
    }

    function validateEmail(email) {
      const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return re.test(email);
    }

    let touched = { email: false, password: false, captcha: false };

    function reloadCaptcha() {
      captchaImg.src = '/captcha?' + Date.now();
      captchaInput.value = '';
      captchaInput.classList.remove('input-invalid', 'input-valid');
      captchaError.textContent = '';
      captchaError.style.display = 'none';
    }

    refreshCaptcha.addEventListener('click', reloadCaptcha);
    captchaImg.addEventListener('click', reloadCaptcha);

    function validateLoginForm() {
      let valid = true;
      // Email validation
      if (touched.email) {
        if (!validateEmail(emailInput.value)) {
          emailInput.classList.add('input-invalid');
          emailInput.classList.remove('input-valid');
          emailError.textContent = 'Please enter a valid email address.';
          emailError.style.display = 'block';
          valid = false;
        } else {
          emailInput.classList.remove('input-invalid');
          emailInput.classList.add('input-valid');
          emailError.textContent = '';
          emailError.style.display = 'none';
        }
      } else {
        emailInput.classList.remove('input-invalid');
        emailInput.classList.remove('input-valid');
        emailError.textContent = '';
        emailError.style.display = 'none';
      }
      // Password validation
      if (touched.password) {
        if (!passwordInput.value) {
          passwordInput.classList.add('input-invalid');
          passwordInput.classList.remove('input-valid');
          passwordError.textContent = 'Password cannot be empty.';
          passwordError.style.display = 'block';
          valid = false;
        } else {
          passwordInput.classList.remove('input-invalid');
          passwordInput.classList.add('input-valid');
          passwordError.textContent = '';
          passwordError.style.display = 'none';
        }
      } else {
        passwordInput.classList.remove('input-invalid');
        passwordInput.classList.remove('input-valid');
        passwordError.textContent = '';
        passwordError.style.display = 'none';
      }
      // CAPTCHA validation
      if (touched.captcha) {
        if (!captchaInput.value) {
          captchaInput.classList.add('input-invalid');
          captchaInput.classList.remove('input-valid');
          captchaError.textContent = 'Please enter the CAPTCHA.';
          captchaError.style.display = 'block';
          valid = false;
        } else {
          captchaInput.classList.remove('input-invalid');
          captchaInput.classList.add('input-valid');
          captchaError.textContent = '';
          captchaError.style.display = 'none';
        }
      } else {
        captchaInput.classList.remove('input-invalid');
        captchaInput.classList.remove('input-valid');
        captchaError.textContent = '';
        captchaError.style.display = 'none';
      }
      loginBtn.disabled = !valid;
      return valid;
    }

    emailInput.addEventListener('input', () => { touched.email = true; validateLoginForm(); });
    passwordInput.addEventListener('input', () => { touched.password = true; validateLoginForm(); });
    captchaInput.addEventListener('input', () => { touched.captcha = true; validateLoginForm(); });

    // Show popup if ?error=oauth is in the URL
    window.addEventListener('DOMContentLoaded', () => {
      reloadCaptcha();
      validateLoginForm();
      const params = new URLSearchParams(window.location.search);
      if (params.get('error') === 'oauth') {
        showPopup('OAuth login failed. Please try again.', 'error');
      }
    });

    document.getElementById('loginForm').addEventListener('submit', async function (e) {
      if (!validateLoginForm()) {
        e.preventDefault();
        return;
      }
      e.preventDefault();
      const email = document.getElementById('email').value;
      const password = document.getElementById('password').value;
      const captcha = document.getElementById('captchaInput').value;
      const response = await fetch('/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, password, captcha })
      });
      const result = await response.json();
      showPopup(result.message, result.success ? 'success' : 'error');
      if (!result.success && result.message === 'CAPTCHA does not match') {
        reloadCaptcha();
        captchaInput.value = '';
        touched.captcha = false;
      }
      if (result.success) {
        setTimeout(() => {
          window.location.href = '/home';
        }, 1500);
      }
    });
  </script>
</body>
</html>
